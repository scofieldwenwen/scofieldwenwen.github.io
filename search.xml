<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[adb 常用命令]]></title>
      <url>/2018/09/04/adb%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<h3 id="调试相关"><a href="#调试相关" class="headerlink" title="调试相关"></a>调试相关</h3><h4 id="1-adb-服务"><a href="#1-adb-服务" class="headerlink" title="1. adb 服务"></a>1. adb 服务</h4><ul>
<li>开启服务<br> <code>adb start-sever</code></li>
<li>关闭服务<br><code>adb stop-server</code></li>
</ul>
<h4 id="2-设备"><a href="#2-设备" class="headerlink" title="2. 设备"></a>2. 设备</h4><ul>
<li>列出设备及其id<br><code>adb devices</code></li>
<li>使用特定设备操作<br><code>adb -s device_id</code><br>例如：<code>adb -s 47db0de20304 shell</code></li>
</ul>
<h4 id="3-重启"><a href="#3-重启" class="headerlink" title="3. 重启"></a>3. 重启</h4><ul>
<li>正常重启<br><code>adb reboot</code></li>
<li>重启到 bootloader (刷机模式)<br><code>adb reboot bootloader</code></li>
<li>重启到 recovery (恢复模式)<br><code>adb reboot recovery</code></li>
</ul>
<h4 id="4-Monkey-测试"><a href="#4-Monkey-测试" class="headerlink" title="4. Monkey 测试"></a>4. Monkey 测试</h4><ul>
<li>随机测试<br><code>adb shell monkey -p your.package.name 1000</code></li>
<li>script文件测试<br><code>adb shell monkey -f /sdcard/xxx.script</code></li>
</ul>
<h4 id="5-查看进程"><a href="#5-查看进程" class="headerlink" title="5. 查看进程"></a>5. 查看进程</h4><ul>
<li><p>列出进程列表及其pid<br><code>adb shell ps</code></p>
</li>
<li><p>杀死指定pid的进程<br><code>adb shell kill pid</code></p>
</li>
<li><p>查看指定进程信息<br><code>adb shell ps -x pid</code></p>
</li>
</ul>
<h4 id="6-查看-service"><a href="#6-查看-service" class="headerlink" title="6. 查看 service"></a>6. 查看 service</h4><p>  <code>adb shell service list</code></p>
<h4 id="7-查看系统当前内存使用情况"><a href="#7-查看系统当前内存使用情况" class="headerlink" title="7. 查看系统当前内存使用情况"></a>7. 查看系统当前内存使用情况</h4><p>  <code>adb shell cat /proc/meminfo</code></p>
<ul>
<li>查看指定包名应用内存使用情况<br><code>adb shell dumpsys meminfo package</code></li>
</ul>
<h4 id="8-Activity-调试"><a href="#8-Activity-调试" class="headerlink" title="8. Activity 调试"></a>8. Activity 调试</h4><ul>
<li>启动应用<br><code>adb shell am start -n your.package.name/your.package.name-activity</code></li>
<li>停止应用<br><code>adb shell am force-stop package</code></li>
<li>查看当前 Activity 名称<br><code>adb shell dumpsys activity | findstr “mFocusedActivity”</code></li>
</ul>
<h3 id="设备应用管理"><a href="#设备应用管理" class="headerlink" title="设备应用管理"></a>设备应用管理</h3><p>（这里推荐一个Android Stuido 插件：<a href="https://github.com/pbreault/adb-idea" target="_blank" rel="external">ADB Idea </a> ）</p>
<h4 id="1-安装apk"><a href="#1-安装apk" class="headerlink" title="1. 安装apk"></a>1. 安装apk</h4><ul>
<li><p>安装<br><code>adb install xxx.apk</code></p>
</li>
<li><p>覆盖安装(保留缓存和数据)<br><code>adb install -r xxx.apk</code></p>
</li>
</ul>
<h4 id="2-卸载应用"><a href="#2-卸载应用" class="headerlink" title="2. 卸载应用"></a>2. 卸载应用</h4><ul>
<li><p>卸载<br><code>adb uninstall package</code></p>
</li>
<li><p>卸载时保留数据和缓存目录<br><code>adb uninstall -k package</code></p>
</li>
</ul>
<h4 id="3-查看设备应用"><a href="#3-查看设备应用" class="headerlink" title="3. 查看设备应用"></a>3. 查看设备应用</h4><ul>
<li><p>查看设备所有应用包名<br><code>adb shell pm list packages</code></p>
</li>
<li><p>列出指定包名对应的apk路径<br><code>adb shell pm path your.package.name</code></p>
</li>
<li><p>清空指定包名对应的应用的数据和缓存文件<br><code>adb shell pm clear your.package.name</code></p>
</li>
</ul>
<h3 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h3><h4 id="1-将电脑文件复制到设备sd卡上"><a href="#1-将电脑文件复制到设备sd卡上" class="headerlink" title="1. 将电脑文件复制到设备sd卡上"></a>1. 将电脑文件复制到设备sd卡上</h4><p>  <code>adb push 电脑文件路径  /sdcard</code></p>
<h4 id="2-设备文件复制到电脑上"><a href="#2-设备文件复制到电脑上" class="headerlink" title="2. 设备文件复制到电脑上"></a>2. 设备文件复制到电脑上</h4><p>  <code>adb pull /sdcard/text.txt 电脑文件路径</code></p>
<h4 id="3-删除"><a href="#3-删除" class="headerlink" title="3. 删除"></a>3. 删除</h4><p>  <code>adb shell rm /sdcard/text.txt</code><br>   -f 强制删除文件不需要确认<br>   -r 递归删除文件夹内文件<br>   -i 删除文件前需要确认</p>
<h4 id="4-创建目录"><a href="#4-创建目录" class="headerlink" title="4. 创建目录"></a>4. 创建目录</h4><p>  <code>adb shell mkdir -p  /sdcard/temp/test/</code><br>  指定 -p 递归创建目录</p>
<h4 id="5-创建文件"><a href="#5-创建文件" class="headerlink" title="5. 创建文件"></a>5. 创建文件</h4><p>  <code>adb shell touch /sdcard/text.txt</code></p>
<h4 id="6-复制文件"><a href="#6-复制文件" class="headerlink" title="6. 复制文件"></a>6. 复制文件</h4><p>  <code>adb shell cp /sdcard/text.txt  /sdcard/test/</code></p>
<h4 id="7-移动文件"><a href="#7-移动文件" class="headerlink" title="7. 移动文件"></a>7. 移动文件</h4><p>  <code>adb shell mv /sdcard/1.txt /sdcard/2.text</code><br>  移动同一目录下文件相当于重命名文件</p>
<h3 id="其他一些命令"><a href="#其他一些命令" class="headerlink" title="其他一些命令"></a>其他一些命令</h3><h4 id="1-申请-toot-权限"><a href="#1-申请-toot-权限" class="headerlink" title="1. 申请 toot 权限"></a>1. 申请 toot 权限</h4><p>  <code>adb shell</code><br>  <code>su</code></p>
<h4 id="2-查看手机上所有的包名"><a href="#2-查看手机上所有的包名" class="headerlink" title="2. 查看手机上所有的包名"></a>2. 查看手机上所有的包名</h4><p>  <code>adb shell</code><br>  <code>cd data/data ; ls</code></p>
<h4 id="3-Linux-多个命令行一起执行可以用-“-”-或者-“-amp-amp-”-进行分割"><a href="#3-Linux-多个命令行一起执行可以用-“-”-或者-“-amp-amp-”-进行分割" class="headerlink" title="3. Linux 多个命令行一起执行可以用 “;” 或者 “&amp;&amp;” 进行分割"></a>3. <strong>Linux 多个命令行一起执行可以用 “;” 或者 “&amp;&amp;” 进行分割</strong></h4><p>  <code>cd data/data ; ls</code></p>
<h4 id="4-adb-shell-查看文件后退出"><a href="#4-adb-shell-查看文件后退出" class="headerlink" title="4. adb shell 查看文件后退出"></a>4. adb shell 查看文件后退出</h4><p>  <code>exit</code>  或者 Ctrl + D</p>
<h3 id="adb-官方链接"><a href="#adb-官方链接" class="headerlink" title="adb 官方链接"></a>adb 官方链接</h3><p> <a href="https://developer.android.google.cn/studio/command-line/adb?hl=zh-cn" target="_blank" rel="external">https://developer.android.google.cn/studio/command-line/adb?hl=zh-cn</a></p>
]]></content>
      
        <categories>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> -adb </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Chrome 快捷键大全]]></title>
      <url>/2018/05/02/%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%A7%E5%85%A8/</url>
      <content type="html"><![CDATA[<p>从2013年开始使用 Chrome 浏览器，简洁好用。以前是用来专门科学上网，后来工作发现 Chrome 是开发必备。今天整理了一下Chrome的快捷键，有些挺常用，熟悉掌握快捷键，甚至不要鼠标就可以装逼了。</p>
<h2 id="标签和窗口"><a href="#标签和窗口" class="headerlink" title="标签和窗口"></a>标签和窗口</h2><ul>
<li>同个窗口新建标签：Ctrl + T</li>
<li>重新打开最后关闭的标签页：Ctrl + Shift + T</li>
<li>打开新建窗口： Ctrl + N</li>
<li>打开新的无痕窗口：Shift + Ctrl + N</li>
<li>标签内打开 Home 页面：Alt  + Home</li>
<li>同个标签前进 / 后退：Alt + Right  /  Alt + Left</li>
<li>向左切换标签：Ctrl + Tab  /  Ctrl + PgDn</li>
<li>向右切换标签：Ctrl + Shift + Tab   /  Ctrl + PgUp</li>
<li>关闭标签：Ctrl + W  /  Ctrl + F4</li>
<li>关闭窗口：Alt + F4  /  Ctrl + Shift + W</li>
<li>关闭浏览器：Ctrl + Shift + Q</li>
<li>最小化当前窗口：Alt + 空格键 + N</li>
<li>最大化当前窗口：Alt + 空格键 + X</li>
<li>在新的后台标签页中打开链接：Ctrl + 单击  /  鼠标滚轮单机</li>
<li>打开链接，并跳转到该链接：Ctrl + Shift + 单击</li>
<li>在新窗口打开链接： Shift + 单击</li>
<li>用鼠标在标签中打开链接：将链接拖到标签页中</li>
<li>在最大化模式和窗口模式间切换：双击标签栏的空白区域</li>
</ul>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>下载内容：Ctrl + J</li>
<li>历史记录：Ctrl + H</li>
<li>开发者工具：F12  /   Ctrl + Shift + J  /   Ctrl + Shift + I</li>
<li>保存网页：Ctrl + S</li>
<li>添加书签：Ctrl + D</li>
<li>添加所有打开的网页添加书签：Ctrl + Shift + D</li>
<li>书签管理器：Ctrl + Shift + O</li>
<li>用浏览器打开文件：Ctrl + O</li>
<li>任务管理器：Shift + Esc</li>
<li>清除历史记录：Ctrl + Shift + Del</li>
</ul>
<h2 id="地址栏"><a href="#地址栏" class="headerlink" title="地址栏"></a>地址栏</h2><ul>
<li>使用其他搜索引擎进行搜索：Tab</li>
<li>为网站名称添加 www. 和 .com：Ctrl + Enter</li>
</ul>
<ul>
<li>地址栏搜索：Ctrl + K  /  Ctrl + E</li>
<li>跳转到地址栏：Ctrl + l   /   Alt + D   /   F6</li>
<li>站内搜索：关键字 + site：网址</li>
</ul>
<h2 id="页面"><a href="#页面" class="headerlink" title="页面"></a>页面</h2><ul>
<li>先下翻页：PgUp</li>
<li>向上翻页：PgDn</li>
<li>打印：Ctrl + P</li>
<li>搜索：Ctrl + F</li>
<li>刷新：Ctrl + R  /  F5   /   Ctrl + F5</li>
<li>滑动到最顶部：Home</li>
<li>滑动到最底部：End</li>
<li>调整页面字体大小：Ctrl + ‘’+’’  /  Ctrl + ‘’-‘’  或者 Ctrl + 鼠标滚轮上/下</li>
<li>页面字体恢复默认：Ctrl + 0</li>
<li>全屏切换：F11</li>
</ul>
<h2 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h2><ul>
<li>同个窗口新建标签：Ctrl + T</li>
<li>重新打开最后关闭的标签页：Ctrl + Shift + T</li>
<li>在新的后台标签页中打开链接：Ctrl + 单击  /  鼠标滚轮单机</li>
<li>打开链接，并跳转到该链接：Ctrl + Shift + 单击</li>
<li>关闭标签：Ctrl + W  </li>
<li>同个标签浏览历史前进 / 后退：Alt + Right  /  Alt + Left</li>
<li>添加书签：Ctrl + D</li>
<li>下载内容：Ctrl + J</li>
<li>历史记录：Ctrl + H</li>
<li>切换标签：Ctrl + Tab  /  Ctrl + PgDn</li>
<li>向右切换标签：Ctrl + Shift + Tab   /  Ctrl + PgUp</li>
<li>标签内打开 Home 页面：Alt  + Home</li>
</ul>
]]></content>
      
        <categories>
            
            <category> skill </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Chrome </tag>
            
            <tag> Tool </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo + Github 搭建个人博客]]></title>
      <url>/2017/07/15/hexo%20github%20pager%20build%20blog/</url>
      <content type="html"><![CDATA[<p>欢迎来到 <a href="http://scofieldwenwen.com">scofieldwenwen 的个人博客</a>，受到<a href="http://stormzhang.com" target="_blank" rel="external"> stormzhang </a>的影响，决定开始搭建自己的博客。该文是我自己搭建博客的过程，采用的是 Hexo 博客框架管理，使用 Github 托管，将自己的域名关联到 Github Pages 上。</p>
<h2 id="安装-git"><a href="#安装-git" class="headerlink" title="安装 git"></a>安装 git</h2><ul>
<li>在 Windows 平台下载安装 Git， <a href="https://git-for-windows.github.io/" target="_blank" rel="external">点击下载Git</a></li>
<li>安装教程: <a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137396287703354d8c6c01c904c7d9ff056ae23da865a000" target="_blank" rel="external">在 Windows 上安装 Git</a></li>
<li>Git 的命令就是 Linux 的 shell 命令行: <a href="http://www.jianshu.com/p/76f15b958d0c" target="_blank" rel="external">Git 基本操作命令</a></li>
<li>查看 Git 安装是否完成，在 win+r 中输入 cmd 命令窗口弹出后，输入 git –version 查看 git 版本</li>
<li>设置 Git 的用户名和邮箱：<br>  $ git config –global user.name “scofieldwenwen”<br>  $ git config –global user.email “scofieldwenwen@163.com”</li>
</ul>
<h2 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h2><ul>
<li>Node.js <a href="https://nodejs.org/en/download/" target="_blank" rel="external">官网下载</a>， 下载后基本都是点击下一步完成安装.</li>
<li>查看 Node.js 是否安装完成，在 win+r 中输入 cmd 命令窗口弹出后，输入 node -v 查看 Node 版本</li>
</ul>
<h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h2><ul>
<li>在创建目标文件夹 (如 D:\hexo)，在 hexo 文件夹里，单机右键选择 <strong>Git Bash Here</strong>，输入以下命令安装 Hexo :<br>  $ npm install -g hexo-cli</li>
</ul>
<ul>
<li><p>Hexo 初始化配置<br>  $ npm hexo init<br>  $ npm install </p>
</li>
<li><p>初始化之后， hexo 的结构目录如下:<img src="http://p049pdhen.bkt.clouddn.com/blog_build_hexo%20files.png" alt=""></p>
</li>
<li><p>Hexo 常用的命令行：<br>  hexo help #查看帮助<br>  hexo init #初始化一个目录<br>  hexo new “postName” #新建文章<br>  hexo new page “pageName” #新建页面<br>  hexo generate #生成生成静态网页，可以在 public 目录查看整个网站的文件<br>  hexo server #本地预览，’Ctrl+C’关闭<br>  hexo deploy #部署.deploy目录<br>  hexo clean #清除缓存，强烈建议每次执行命令前先清理缓存，每次部署前先删除 .deploy 文件夹</p>
<p>  简写：<br>  hexo n == hexo new<br>  hexo g == hexo generate<br>  hexo s == hexo server<br>  hexo d == hexo deploy</p>
</li>
<li><p>Hexo 安装 server，生成静态文件后，用 server 启动服务器，从而预览。<br>  $ npm install hexo-server –save </p>
</li>
<li><p>可以就可以查看第一个 hexo 默认生成的 blog ，输入命令：<br>   $ hexo generate</p>
<pre><code>$ hexo server 
</code></pre><p>   在浏览器查看本地静态网页：<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a><br>   <img src="http://p049pdhen.bkt.clouddn.com/blog_build_hexo%20local%20preview.png" alt=""></p>
<pre><code>看到这个页面有点小激动，本地博客搭建起来了，不过只是个本地的网页而已，接下来就要把网页部署上去。
</code></pre></li>
</ul>
<h2 id="将博客部署到-Github-Pages-上"><a href="#将博客部署到-Github-Pages-上" class="headerlink" title="将博客部署到 Github Pages 上"></a>将博客部署到 Github Pages 上</h2><ul>
<li>准备一个 Github 账号，没有的就去<a href="https://github.com/" target="_blank" rel="external">官网</a>注册一个账号。</li>
<li><p>创建一个仓库 repository，用来托管博客。仓库名必须为 [github用户名].github.io<br><img src="http://p049pdhen.bkt.clouddn.com/blog_build_github%20create%20repository.png" alt=""></p>
</li>
<li><p>配置 SSH 密钥教程：<a href="http://www.cnblogs.com/ayseeing/p/3572582.html" target="_blank" rel="external">github 设置添加 SSH</a></p>
</li>
<li>将本地的 Hexo 文件同步到 Github 的仓库中：<br>复制刚才创建仓库的 HTTPS 链接<br><img src="http://p049pdhen.bkt.clouddn.com/blog_build_github%20clone%20repository.png" alt=""><br>将链接粘贴到 Hexo 文件目录的 _config.yml 配置文件上保存：<pre><code>deploy:
</code></pre>  type: git<pre><code>repo: https://github.com/scofieldwenwen/scofieldwenwen.github.io.git
branch: master
</code></pre><strong>注意</strong>：配置文件键值之间必须有个空格<br>将博客部署上去：<br>   $ hexo g<br> $ hexo d<br>或者直接输入<br> $ hexo g -d<br>在浏览器查看 Github Pages，在浏览器输入 username.github.io (我的是scofieldwenwen.github.io) 就可以看到自己的博客了!到这里一个免费的博客就创建好了。</li>
</ul>
<h2 id="配置博客以及主题"><a href="#配置博客以及主题" class="headerlink" title="配置博客以及主题"></a>配置博客以及主题</h2><ul>
<li>配置博客： <a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="external">Hexo 官网教程</a></li>
<li>在 <a href="https://hexo.io/themes/" target="_blank" rel="external">Hexo 官网</a> 选取主题</li>
<li>将主题在 Github 上打开，复制 Clone HTTPS ，然后在在 hexo\theme 目录下 clone 该主题，如我使用是Next主题<br>  git clone <a href="https://github.com/iissnan/hexo-theme-next.git" target="_blank" rel="external">https://github.com/iissnan/hexo-theme-next.git</a></li>
<li>clone 成功后，修改 Hexo 目录中的配置文件 _config.yml 的主题 ，主题名字为 clone 下来的主题文件夹名称<br>  theme: hexo-theme-next</li>
<li>生成静态网页，查看本地效果<pre><code>$ hexo g
</code></pre>  $ hexo s</li>
<li>效果可以的话，就部署到 Github 上<br>   $ hexo clean<br>   $ hexo g -d</li>
</ul>
<h2 id="将自己的域名关联上-Github-Pages-上"><a href="#将自己的域名关联上-Github-Pages-上" class="headerlink" title="将自己的域名关联上 Github Pages 上"></a>将自己的域名关联上 Github Pages 上</h2><ul>
<li>购买一个域名，我的是在<a href="https://wanwang.aliyun.com/domain/" target="_blank" rel="external"> 阿里云 </a>上购买的。</li>
<li>配置 CNAME 文件<br>在 \hexo\source 文件夹下创建文件 CNAME （没有后缀名），编辑内容，填写申请的域名。</li>
<li>修改 DNS<br><img src="http://p049pdhen.bkt.clouddn.com/blog_build_ali%20cloud%20dns.png" alt=""></li>
<li><strong>注意:</strong> 不能有不能有相同的主机记录,比如我的邮箱也有 @ 的主机记录,我就不需要邮箱就把它删了。</li>
</ul>
<h2 id="大功告成"><a href="#大功告成" class="headerlink" title="大功告成"></a>大功告成</h2><ul>
<li>最后网页部署，浏览器输入域名（scofieldwenwen.com）或者自己 Github Pages 的地址<br><img src="http://p049pdhen.bkt.clouddn.com/blog_build_my_blog.png" alt=""></li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul>
<li>搭建 hexo 中还会用到一些插件，这个因人而异，当然这些插件都是有说明文档的，照着来就行。</li>
<li>万事开头难，但是一旦开始就要把它做好！</li>
<li>接下来就是要坚持写自己的博客了，记录总结，留下自己成长的过程！</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Blog </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
